services:
  db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/postgres:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    

  web:
    build: .
    command: >
         bash -c "bundle exec rails db:migrate && bundle exec rails s -b 0.0.0.0 -p 3000"
    volumes:
      - .:/rails
      - /rails/public/assets # To prevent deleting precompiled assets.
      - bundle:/usr/local/bundle
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - db
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      RAILS_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      ASSUME_SSL: false
      FORCE_SSL: false
    env_file:
      - .env
    stdin_open: true
    tty: true

  ngrok:
    image: wernight/ngrok
    command: ngrok http http://localhost:3000 --authtoken=2pW3QezRxjjnTJ485Tpi5t18reH_3Q9iPYyD7wCKCkDmqGvnR
    ports:
      - "4040:4040" # Для доступа к ngrok dashboard
    networks:
      - app-network
    
volumes:
  postgres_data:
  bundle:

networks:
  app-network:
    driver: bridge


