services:
  db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/postgres:/docker-entrypoint-initdb.d
      - /home/deploy/.env
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mynetwork

  web:
    build: .
    command: >
      bash -c "
        while ! nc -z db 5432; do
          echo 'Waiting for database...';
          sleep 1;
        done;
        bundle exec rails db:migrate &&
        bundle exec rails s -b 0.0.0.0 -p 3000"
    volumes:
      - .:/rails
      - /rails/public/assets # To prevent deleting precompiled assets.
      - bundle:/usr/local/bundle
      - /home/deploy/.env
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      RAILS_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      ASSUME_SSL: false
      FORCE_SSL: false
    env_file:
      - .env
    stdin_open: true
    tty: true
    networks:
      - mynetwork

volumes:
  postgres_data:
  bundle:

networks:
  mynetwork:
    driver: bridge
