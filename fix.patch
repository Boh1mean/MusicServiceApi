diff --git a/.gitignore b/.gitignore
index cc862e3..c564c18 100644
--- a/.gitignore
+++ b/.gitignore
@@ -32,3 +32,6 @@
 /config/master.key
 
 /config/credentials/production.key
+
+# RubyMine
+.idea
\ No newline at end of file
diff --git a/Dockerfile b/Dockerfile
index de6c95d..8c592c0 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -14,6 +14,8 @@ FROM docker.io/library/ruby:$RUBY_VERSION-slim AS base
 # Rails app lives here
 WORKDIR /rails
 
+EXPOSE 3000
+
 # Install base packages
 RUN apt-get update -qq && \
     apt-get install --no-install-recommends -y curl libjemalloc2 libvips postgresql-client && \
@@ -62,12 +64,6 @@ RUN groupadd --system --gid 1000 rails && \
 USER 1000:1000
 
 COPY entrypoint.sh /usr/local/bin/entrypoint.sh
-RUN chmod +x /usr/local/bin/entrypoint.sh
 
 ENTRYPOINT [""]
 CMD ["entrypoint.sh"]
-
-
-# Start server via Thruster by default, this can be overwritten at runtime
-EXPOSE 80
-CMD ["./bin/thrust", "./bin/rails", "server"]
diff --git a/bin/ entrypoint.sh b/bin/ entrypoint.sh
deleted file mode 100755
index 57567d6..0000000
--- a/bin/ entrypoint.sh	
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/bin/bash -e
-
-# Enable jemalloc for reduced memory usage and latency.
-if [ -z "${LD_PRELOAD+x}" ]; then
-    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so.2 -print -quit)
-    export LD_PRELOAD
-fi
-
-# If running the rails server then create or migrate existing database
-if [ "${@: -2:1}" == "./bin/rails" ] && [ "${@: -1:1}" == "server" ]; then
-  ./bin/rails db:prepare
-fi
-
-exec "${@}"
diff --git a/config/database.yml b/config/database.yml
index fca98d4..844b1d0 100644
--- a/config/database.yml
+++ b/config/database.yml
@@ -18,9 +18,9 @@ default: &default
   # For details on connection pooling, see Rails configuration guide
   # https://guides.rubyonrails.org/configuring.html#database-pooling
   pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
-  username: MusicServiceApi
+  username: <%= ENV.fetch('POSTGRES_USER', 'postgres') %>
   password: <%= ENV["POSTGRES_PASSWORD"] %>
-  host: db
+  host: <%= ENV.fetch('POSTGRES_HOST', "db") %>
  
 
 development:
@@ -37,8 +37,6 @@ production:
   primary: &primary_production
     <<: *default
     database: music_service_api_production
-    username: music_service_api
-    password: <%= ENV["MUSIC_SERVICE_API_DATABASE_PASSWORD"] %>
   cache:
     <<: *primary_production
     database: music_service_api_production_cache
diff --git a/docker-compose.yml b/docker-compose.yml
index 5aae4ef..c170429 100644
--- a/docker-compose.yml
+++ b/docker-compose.yml
@@ -7,10 +7,6 @@ services:
     volumes:
       - postgres_data:/var/lib/postgresql/data
       - ./db/postgres:/docker-entrypoint-initdb.d
-    environment:
-      POSTGRES_USER: ${POSTGRES_USER}
-      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
-      POSTGRES_DB: ats_production
     ports:
       - "5432:5432"
     env_file:
@@ -22,13 +18,13 @@ services:
       dockerfile: Dockerfile
       args:
         RAILS_ENV: production
-    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:prepare && bundle exec rails s -b '0.0.0.0'"
+    working_dir: /rails
     volumes:
       - .:/rails
       - /rails/public/assets # To prevent deleting precompiled assets.
       - bundle:/usr/local/bundle
     ports:
-      - "3000:3000"
+      - "80:3000"
     depends_on:
       - db
     environment:
diff --git a/entrypoint.sh b/entrypoint.sh
new file mode 100755
index 0000000..8188f46
--- /dev/null
+++ b/entrypoint.sh
@@ -0,0 +1,4 @@
+#!/bin/bash -e
+
+bin/rake db:prepare
+rm -rf tmp/pids/server.pid && bin/rails s -p 3000 -b 0.0.0.0
